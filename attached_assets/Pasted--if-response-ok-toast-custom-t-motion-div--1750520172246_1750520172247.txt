
      if (response.ok) {
        toast.custom(
          (t) => (
            <motion.div
              initial={{ opacity: 0, y: -100 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -100 }}
              className="flex items-center gap-2 bg-emerald-500/20 border border-emerald-500/30 px-6 py-4 rounded-lg shadow-lg"
            >
              <span className="text-emerald-500 flex items-center gap-2">
                <svg className="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                Message sent successfully!
              </span>
            </motion.div>
          ),
          { duration: 5000, position: 'top-center' }
        );
        reset();
        setIsOpen(false);
      } else {
        const error = await response.json();
        throw new Error(error.message || 'Failed to send message');
      }
    } catch (error) {
      toast.custom(
        (t) => (
          <motion.div
            initial={{ opacity: 0, y: -100 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -100 }}
            className="flex items-center gap-2 bg-red-500/20 border border-red-500/20 px-6 py-4 rounded-lg shadow-lg"
          >
            <span className="text-red-500 flex items-center gap-2">
              <svg className="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
              </svg>
              {error instanceof Error ? error.message : 'Failed to send message'}
            </span>
          </motion.div>
        ),
        { duration: 5000, position: 'top-center' }
      );
    } finally {
      setStatus('idle');
    }